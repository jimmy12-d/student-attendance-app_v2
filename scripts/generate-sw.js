const fs = require('fs');
const path = require('path');

// Path to your .env.local file
const envPath = path.resolve(process.cwd(), '.env.local');

// Read the .env.local file
if (fs.existsSync(envPath)) {
    const envFileContent = fs.readFileSync(envPath, 'utf8');
    
    // Parse the .env file content
    envFileContent.split('\\n').forEach(line => {
        if (line) {
            const [key, value] = line.split('=');
            // Set the environment variable if it's not already set
            if (key && value && !process.env[key.trim()]) {
                process.env[key.trim()] = value.trim();
            }
        }
    });
} else {
    console.warn(".env.local file not found. Using system environment variables.");
}


const swTemplate = `
// This file is generated by scripts/generate-sw.js
importScripts('https://www.gstatic.com/firebasejs/9.15.0/firebase-app-compat.js');
importScripts('https://www.gstatic.com/firebasejs/9.15.0/firebase-messaging-compat.js');

const firebaseConfig = {
  apiKey: "${process.env.NEXT_PUBLIC_FIREBASE_API_KEY}",
  authDomain: "${process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}",
  projectId: "${process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID}",
  storageBucket: "${process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}",
  messagingSenderId: "${process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}",
  appId: "${process.env.NEXT_PUBLIC_FIREBASE_APP_ID}",
  measurementId: "${process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID}"
};

if (firebaseConfig.apiKey && firebaseConfig.apiKey !== "undefined") {
    self.firebase.initializeApp(firebaseConfig);
    
    const messaging = self.firebase.messaging();
    
    messaging.onBackgroundMessage((payload) => {
      console.log('[firebase-messaging-sw.js] Received background message ', payload);
      
      const notificationTitle = payload.notification.title;
      const notificationOptions = {
        body: payload.notification.body,
        icon: payload.notification.icon || '/favicon.png'
      };
    
      self.registration.showNotification(notificationTitle, notificationOptions);
    });
} else {
    console.error("Firebase config is not available in the service worker.");
}
`;

const outputPath = path.resolve(process.cwd(), 'public/firebase-messaging-sw.js');
fs.writeFileSync(outputPath, swTemplate.trim());

console.log('Service worker with environment variables generated successfully!'); 