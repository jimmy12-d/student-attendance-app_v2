rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- HELPER FUNCTION ---
    // Checks if the user is an admin.
    function isAuthorizedUser() {
      return request.auth != null &&
          exists(/databases/$(database)/documents/authorizedUsers/$(request.auth.token.email));
    }


    // --- COLLECTION RULES ---

    match /students/{studentId} {
      // READ: An admin or the student owner can read.
      allow read: if isAuthorizedUser() || (request.auth != null && request.auth.uid == resource.data.authUid);

      // CREATE/DELETE: Only admins can create or delete student records.
      allow create, delete: if isAuthorizedUser();
      
      // UPDATE: An admin can update anything. A user can update a record
      // ONLY to link their authUid for the first time.
      allow update: if isAuthorizedUser() ||
                     (request.auth != null &&
                      resource.data.authUid == '' &&
                      request.resource.data.authUid == request.auth.uid);
    }

    match /classes/{classId} {
      // Allow any authenticated user to read class information.
      allow read: if request.auth != null;
    }

    match /examSettings/{settingId} {
      // Allow any authenticated user to read exam settings.
      allow read: if request.auth != null;
    }

    match /examControls/{controlId} {
      // Only admins can read or change exam controls.
      allow read, write: if isAuthorizedUser();
    }

    match /attendance/{attendanceId} {
      // Only admins can create or update attendance records.
      allow write: if isAuthorizedUser();
      
      // An admin can read any record.
      // A student can read their OWN attendance records.
      // IMPORTANT: This requires your 'attendance' documents to have an 'authUid' field.
      allow read: if true; // Temporary for debugging
    }

    match /classConfigs/{classId} {
      // Allow any authenticated user to read class configurations.
      allow read: if request.auth != null;
      
      // Only admins can create, update, or delete class configurations.
      allow write: if isAuthorizedUser();
    }

    match /classTypes/{classId} {
      // Allow any authenticated user to read class types/configurations.
      allow read: if request.auth != null;
      
      // Only admins can create, update, or delete class types.
      allow write: if isAuthorizedUser();
    }

    match /classes/{classId} {
      // Allow any authenticated user to read class configurations.
      allow read: if request.auth != null;
      
      // Only admins can create, update, or delete class configurations.
      allow write: if isAuthorizedUser();
    }

    match /permissions/{permissionId} {
      // Allow any authenticated user to read permissions (needed for attendance logic).
      allow read: if request.auth != null;
      
      // Only admins can create, update, or delete permissions.
      allow write: if isAuthorizedUser();
    }

    match /documents/{documentId} {
      // READ: Authenticated users can read document metadata.
      allow read: if request.auth != null;
      
      // CREATE: Authenticated users can upload new documents.
      // In production, you might want to restrict this to admins only.
      allow create: if request.auth != null;
      
      // UPDATE/DELETE: Only admins can modify or delete documents.
      allow update, delete: if isAuthorizedUser();
    }

    match /printRequests/{requestId} {
      // READ: Authenticated users can read their own requests, admins can read all.
      allow read: if request.auth != null && 
                     (isAuthorizedUser() || request.auth.uid == resource.data.requestedBy);
      
      // CREATE: Authenticated users can create print requests.
      allow create: if request.auth != null;
      
      // UPDATE: Only admins can update print requests (for approval/rejection).
      allow update: if isAuthorizedUser();
      
      // DELETE: Only admins can delete print requests.
      allow delete: if isAuthorizedUser();
    }

    match /teachers/{teacherId} {
      // READ: Authenticated users can read teacher information for form population.
      allow read: if request.auth != null;
      
      // CREATE/UPDATE/DELETE: Only admins can manage teacher records.
      allow create, update, delete: if isAuthorizedUser();
    }

    match /cleanupLogs/{logId} {
      // READ: Only admins can read cleanup logs.
      allow read: if isAuthorizedUser();
      
      // CREATE: Allow system (Cloud Functions) to create logs.
      // UPDATE/DELETE: Only admins can modify logs.
      allow create: if true; // Cloud Functions don't have auth context
      allow update, delete: if isAuthorizedUser();
    }
    
    // Temporary rule to support client SDK fallback
    // Remove this once Firebase Admin SDK is properly configured with service account credentials
    match /processedAbaTransactions/{transactionId} {
      // READ: Allow authorized users (for the UI) and unauthenticated requests (for server API routes)
      allow read: if isAuthorizedUser() || request.auth == null;
      allow write: if false;
    }
  }
} 